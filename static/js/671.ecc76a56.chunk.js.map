{"version":3,"file":"static/js/671.ecc76a56.chunk.js","mappings":"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","sources":["components/modal/BaseModal.js","components/pages/LeadEnrichment.js"],"sourcesContent":["// src/components/modal/BaseModal.js\nimport React from 'react';\nimport './Modal.css';\n\nconst BaseModal = ({ isOpen, onClose, title, onNext, onPrev, children }) => {\n    if (!isOpen) return null;\n\n    return (\n        <div className=\"modal\">\n            <div className=\"modal-content\">\n                <button className=\"close-button\" onClick={onClose} aria-label=\"Close Modal\">&times;</button>\n                <h2>{title}</h2>\n                <div className=\"modal-body\">\n                    {children}\n                </div>\n                <div className=\"navigation\">\n                    <button className=\"nav-arrow\" onClick={onPrev} aria-label=\"Previous\">\n                        &#8592;\n                    </button>\n                    <button className=\"nav-arrow\" onClick={onNext} aria-label=\"Next\">\n                        &#8594;\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default BaseModal;\n","// src/components/pages/LeadEnrichment.js\nimport React, { useState, useEffect } from 'react';\nimport BaseModal from '../modal/BaseModal';\n\nconst LeadEnrichment = ({ isOpen, onClose, onNext, onPrev }) => {\n  const [showDetails, setShowDetails] = useState(false);\n\n  // Log when the modal opens\n  useEffect(() => {\n    console.log(`LeadEnrichment modal isOpen: ${isOpen}`);\n  }, [isOpen]);\n\n  return (\n    <BaseModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title=\"Lead Enrichment\"\n      onNext={onNext}\n      onPrev={onPrev}\n    >\n      {!showDetails ? (\n        <div className=\"section-preview\">\n          <p>\n            Lead enrichment enhances your existing lead data by adding valuable information such as company details,\n            social profiles, and contact information. This process ensures that your sales and marketing teams have\n            a comprehensive understanding of each lead, enabling more personalized and effective outreach.\n          </p>\n          <button\n            onClick={() => setShowDetails(true)}\n            className=\"details-button\"\n          >\n            Read More\n          </button>\n        </div>\n      ) : (\n        <div className=\"section-details\">\n        <h3>Aims & Outcomes</h3>\n        <ul>\n          <li>\n            <strong>Alignment:</strong> Targets elementary school superintendents in North America with 1,000-5,000 students,\n            ensuring focus on the most valuable leads.\n          </li>\n          <li>\n            <strong>Integration:</strong> Utilizes Clearbit's native integration with HubSpot for efficient data enrichment\n            without the need for additional tools.\n          </li>\n          <li>\n            <strong>Data Quality:</strong> Provides enriched firmographic and demographic data, leading to better lead\n            qualification and prioritization.\n          </li>\n          <li>\n            <strong>Segmentation:</strong> Enables more effective segmentation based on enriched attributes,\n            facilitating personalized marketing campaigns.\n          </li>\n          <li>\n            <strong>Enablement:</strong> Equips the sales team with deeper insights for tailored outreach, increasing\n            the likelihood of conversions.\n          </li>\n          <li>\n            <strong>Efficient:</strong> Streamlines the lead nurturing process by focusing efforts on high-quality leads,\n            reducing time wasted on low-potential prospects.\n          </li>\n        </ul>\n\n        <h3>Implementation Steps</h3>\n          <ol>\n            <li><strong>Access:</strong> Set up Integration with Clearbit.</li>\n            <li><strong>Define:</strong> Identify Clearbit attributes that align with lead scoring.</li>\n            <li><strong>Create:</strong> Workflow and Properties.</li>\n            <li><strong>Configure:</strong> Map Clearbit attributes to HubSpot properties.</li>\n            <li><strong>Automate:</strong> Enrichment by workflow enrollments.</li>\n            <li><strong>Testing:</strong> Verify correct data mapping.</li>\n            <li><strong>Data Validation:</strong> Generate and analyze results - monthly and quarterly.</li>\n          </ol>\n\n          <button\n            onClick={() => setShowDetails(false)}\n            className=\"details-button\"\n          >\n            Back to Lead Enrichment\n          </button>\n        </div>\n      )}\n    </BaseModal>\n  );\n};\n\nexport default LeadEnrichment;\n"],"names":["_ref","isOpen","onClose","title","onNext","onPrev","children","_jsx","className","_jsxs","onClick","showDetails","setShowDetails","useState","useEffect","console","log","BaseModal"],"sourceRoot":""}